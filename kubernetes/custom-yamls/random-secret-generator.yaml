# Service Account Token to allow access to Secrets
apiVersion: v1
kind: ServiceAccount
metadata:
  name: service-account-cronjob
  namespace: default
---
# Create the initial secret
apiVersion: v1
kind: Secret
metadata:
  name: rotating-secret-password
  namespace: default
type: Opaque
data:
  ELASTIC_PASSWORD_RESET: 'bXlsb25ncGFzc3dvcmRpc2Nvb2w=' # Initial password string (doesnt matter the string this is reset)
---
# Role to allow Secret resource access
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: default
  name: secrets-editor-cronjob
rules:
  - apiGroups: [""]
    resources:
      - secrets
    verbs:
      - 'patch'
      - 'get'
      - 'create'

---
# Bind the `Role` to the `ServiceAccount` using a RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cronjob-runner-binding
  namespace: default
roleRef:
  apiGroup: ""
  kind: Role
  name: secrets-editor-cronjob
subjects:
  - kind: ServiceAccount
    name: service-account-cronjob
    namespace: default

---
# CronJob to create a Secret resource
apiVersion: batch/v1
kind: CronJob
metadata:
  name: secret-generator
  namespace: default
spec:
  schedule: "*/20 * * * *"  # Run every 5 minutes, you can adjust the schedule as needed
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: service-account-cronjob
          containers:
          - name: secret-generator
            image: bitnami/kubectl:latest  # Use a minimal image with basic tools
            command:
              - /bin/sh
              - "-c"
              - |
                /bin/bash <<'EOF'
                cd /tmp
                
                RAND_STRING=$(head /dev/urandom | tr -dc A-Za-z0-9 | head -c 32)
                RAND_STRING_ENC=$(echo -n "$RAND_STRING" | base64)
                echo "New Password String: $RAND_STRING"
                echo "New Password String (encoded base64): $RAND_STRING_ENC"
                kubectl get secret rotating-secret-password -n default -oyaml > secret.yaml
                echo "------------- Before -------------"
                  cat secret.yaml
                echo "----------------------------------"
                echo ""
                echo "------------- After --------------"
                  sed -i "s/ELASTIC_PASSWORD_RESET: .*/ELASTIC_PASSWORD_RESET: $(echo -n "$RAND_STRING_ENC")/g" secret.yaml
                  cat secret.yaml
                echo "------ Applying New Secret -------"
                  kubectl apply -f secret.yaml
                echo "----------------------------------"
                EOF

          restartPolicy: OnFailure
